#Если Клиент Тогда
	
// Настройка периода
Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "Организация", Организация);
	
	Если ОтчетПоДокументу Тогда
		
		МоментДокумента = новый МоментВремени(Документ.Дата,Документ);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала", МоментДокумента.Дата);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаОкончания", МоментДокумента.Дата);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачГраница", МоментДокумента);
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("КонГраница", МоментДокумента);
		
	Иначе
		
		КонДата = Дата(ОбщийОтчет.ДатаКон);
		КонДата = КонецДня(?(КонДата = Дата('00010101000000'), Дата('39991231235959'), КонДата));
		
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала", НачалоДня(ОбщийОтчет.ДатаНач));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ДатаОкончания", КонецДня(КонДата));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("НачГраница", Новый Граница(НачалоДня(ОбщийОтчет.ДатаНач)));
		ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("КонГраница", Новый Граница(КонДата));
		
	КонецЕсли; 
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПустаяДата", '00010101');
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СостояниеПринятоКУчету",	Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СостояниеСнятоСУчета", 	Перечисления.ВидыСостоянийНМА.Списан);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СостояниеПоступил", 		Перечисления.ВидыСостоянийНМА.Поступил);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("СубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры // СформироватьОтчет()

// Процедура - заполняет начальные настройки отчета
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = Истина;
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.мСтруктураНевыводимыхГруппировок.Вставить("Общие", 1);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОбНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ПервоначальныеСведенияОбНМА.Организация КАК Организация,
	|	ПервоначальныеСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОбНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОбНМА.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияОбНМА.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОбНМА.ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ПервоначальныеСведенияОбНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&КонГраница, Организация = &Организация {(НематериальныйАктив).* КАК НематериальныйАктив}) КАК ПервоначальныеСведенияОбНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|ПОМЕСТИТЬ МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(
	|			&КонГраница,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ПервоначальныеСведенияОбНМА.НематериальныйАктив
	|					ИЗ
	|						ПервоначальныеСведенияОбНМА)) КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|			&КонГраница,
	|			Организация = &Организация
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ПервоначальныеСведенияОбНМА.НематериальныйАктив
	|					ИЗ
	|						ПервоначальныеСведенияОбНМА)) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияНМА_БУ.Счет,
	|	АмортизацияНМА_БУ.Субконто1,
	|	АмортизацияНМА_БУ.СуммаНачальныйОстатокКт,
	|	АмортизацияНМА_БУ.СуммаОборотКт,
	|	АмортизацияНМА_БУ.СуммаКонечныйОстатокКт
	|ПОМЕСТИТЬ АмортизацияНМА_БУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачГраница,
	|			&КонГраница,
	|			Период,
	|			ДвиженияИГраницыПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации
	|				ИЗ
	|					СчетаБухгалтерскогоУчетаНМАСрезПоследних),
	|			&СубконтоНМА,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|					ИЗ
	|						СчетаБухгалтерскогоУчетаНМАСрезПоследних)) КАК АмортизацияНМА_БУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьНМА_БУ.Счет,
	|	СтоимостьНМА_БУ.Субконто1,
	|	СтоимостьНМА_БУ.СуммаНачальныйОстатокДт,
	|	СтоимостьНМА_БУ.СуммаОборотКт,
	|	СтоимостьНМА_БУ.СуммаОборотДт,
	|	СтоимостьНМА_БУ.СуммаКонечныйОстатокДт
	|ПОМЕСТИТЬ СтоимостьНМА_БУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачГраница,
	|			&КонГраница,
	|			Период,
	|			ДвиженияИГраницыПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета
	|				ИЗ
	|					СчетаБухгалтерскогоУчетаНМАСрезПоследних),
	|			&СубконтоНМА,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|					ИЗ
	|						СчетаБухгалтерскогоУчетаНМАСрезПоследних)) КАК СтоимостьНМА_БУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Период КАК ДатаСостояния
	|ПОМЕСТИТЬ ПринятиеКУчету
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ
	|	СостоянияНМАОрганизаций.Состояние = &СостояниеПринятоКУчету
	|	И ВЫБОР
	|			КОГДА &ДатаОкончания = &ПустаяДата
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СостоянияНМАОрганизаций.Период <= &ДатаОкончания
	|		КОНЕЦ
	|	И СостоянияНМАОрганизаций.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Период КАК ДатаСостояния,
	|	ИСТИНА КАК СнятоСУчета
	|ПОМЕСТИТЬ СнятыеСУчета
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ
	|	СостоянияНМАОрганизаций.Состояние = &СостояниеСнятоСУчета
	|	И СостоянияНМАОрганизаций.Период < &ДатаНачала
	|	И СостоянияНМАОрганизаций.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияНМАОрганизаций.НематериальныйАктив КАК НематериальныйАктив,
	|	СостоянияНМАОрганизаций.Состояние КАК Состояние,
	|	СостоянияНМАОрганизаций.Период КАК ДатаСостояния,
	|	СостоянияНМАОрганизаций.Регистратор КАК ДокументУстановкиСостояния
	|ПОМЕСТИТЬ ТекущееСостояние
	|ИЗ
	|	РегистрСведений.СостоянияНМАОрганизаций КАК СостоянияНМАОрганизаций
	|ГДЕ СостоянияНМАОрганизаций.Состояние <> &СостояниеПоступил И // исключим состояние ПоступлениеНМА (еще не принят)
	|	СостоянияНМАОрганизаций.Период В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ДатаПоследнегоСостояния.Период)
	|			ИЗ
	|				РегистрСведений.СостоянияНМАОрганизаций КАК ДатаПоследнегоСостояния
	|			ГДЕ
	|				ДатаПоследнегоСостояния.Организация = &Организация
	|				И ДатаПоследнегоСостояния.НематериальныйАктив = СостоянияНМАОрганизаций.НематериальныйАктив
	|				И ВЫБОР
	|					КОГДА &ДатаОкончания = &ПустаяДата
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДатаПоследнегоСостояния.Период < &ДатаОкончания
	|				КОНЕЦ)
	|	И СостоянияНМАОрганизаций.НомерСтроки В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				МАКСИМУМ(ДатаПоследнегоСостояния.НомерСтроки)
	|			ИЗ
	|				РегистрСведений.СостоянияНМАОрганизаций КАК ДатаПоследнегоСостояния
	|			ГДЕ
	|				ДатаПоследнегоСостояния.Организация = &Организация
	|				И ДатаПоследнегоСостояния.НематериальныйАктив = СостоянияНМАОрганизаций.НематериальныйАктив
	|				И ДатаПоследнегоСостояния.Период = СостоянияНМАОрганизаций.Период)
	|	И СостоянияНМАОрганизаций.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение),
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив КАК НематериальныйАктив,
	|	ПРЕДСТАВЛЕНИЕ(ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив),
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.Организация КАК Организация,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ,
	|	ПРЕДСТАВЛЕНИЕ(МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ),
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета КАК СчетУчета,
	|	ТекущееСостояние.Состояние КАК ЗначениеТекущегоСостояния,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СнятыеСУчета.СнятоСУчета, ЛОЖЬ) КАК НМАСнятоСУчетаНаНачало,
	|	ПринятиеКУчету.ДатаСостояния КАК ДатаПринятияКУчету,
	|	ТекущееСостояние.ДатаСостояния КАК ДатаПоследнегоСостояния,
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ЕСТЬNULL(СтоимостьНМА_БУ.СуммаНачальныйОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияНМА_БУ.СуммаНачальныйОстатокКт, 0) КАК АмортизацияНачальныйОстаток,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтоимостьНМА_БУ.СуммаНачальныйОстатокДт, 0) = 0
	|				И ЕСТЬNULL(СтоимостьНМА_БУ.СуммаОборотДт, 0) > ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.ПервоначальнаяСтоимость
	|			ТОГДА ЕСТЬNULL(СтоимостьНМА_БУ.СуммаОборотДт, 0) - ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.ПервоначальнаяСтоимость
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьНМА_БУ.СуммаОборотДт, 0)
	|	КОНЕЦ КАК СтоимостьОборотДт,
	|	ЕСТЬNULL(СтоимостьНМА_БУ.СуммаОборотКт, 0) КАК СтоимостьОборотКт,
	|	ЕСТЬNULL(АмортизацияНМА_БУ.СуммаОборотКт, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(СтоимостьНМА_БУ.СуммаКонечныйОстатокДт, 0) КАК СтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(АмортизацияНМА_БУ.СуммаКонечныйОстатокКт, 0) КАК АмортизацияКонечныйОстаток,
	|	ЕСТЬNULL(СтоимостьНМА_БУ.СуммаКонечныйОстатокДт, 0) - ЕСТЬNULL(АмортизацияНМА_БУ.СуммаКонечныйОстатокКт, 0) КАК ОстаточнаяСтоимость
	|{ВЫБРАТЬ
	|	Организация.*,
	|	Подразделение.*,
	|	НематериальныйАктив.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния,
	|	СчетНачисленияАмортизации,
	|	НМАСнятоСУчетаНаНачало,
	|	ДатаПринятияКУчету,
	|	ДатаПоследнегоСостояния,
	|	СпособНачисленияАмортизации,
	|	СрокПолезногоИспользования,
	|	НачислятьАмортизацию}
	|ИЗ
	|	ПервоначальныеСведенияОбНМА КАК ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеНМАБухгалтерскийУчетСрезПоследних КАК МестонахождениеНМАБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив = МестонахождениеНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив}
	|			ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаНМАСрезПоследних КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьНМА_БУ КАК СтоимостьНМА_БУ
	|				ПО СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив = СтоимостьНМА_БУ.Субконто1
	|					И СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета = СтоимостьНМА_БУ.Счет
	|				ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияНМА_БУ КАК АмортизацияНМА_БУ
	|				ПО СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив = АмортизацияНМА_БУ.Субконто1
	|					И СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетНачисленияАмортизации = АмортизацияНМА_БУ.Счет
	|			ПО ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|			{ЛЕВОЕ СОЕДИНЕНИЕ СнятыеСУчета КАК СнятыеСУчета
	|			ПО ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив = СнятыеСУчета.НематериальныйАктив}
	|			{ЛЕВОЕ СОЕДИНЕНИЕ ПринятиеКУчету КАК ПринятиеКУчету
	|			ПО ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив = ПринятиеКУчету.НематериальныйАктив}
	|			{ЛЕВОЕ СОЕДИНЕНИЕ ТекущееСостояние КАК ТекущееСостояние
	|			ПО ПервоначальныеСведенияОбНМАОрганизацийСрезПоследних.НематериальныйАктив = ТекущееСостояние.НематериальныйАктив}
	|{ГДЕ
	|	(ЕСТЬNULL(СнятыеСУчета.СнятоСУчета, ЛОЖЬ)) КАК НМАСнятоСУчетаНаНачало,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета,
	|	ТекущееСостояние.Состояние,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.Местонахождение КАК Подразделение,
	|	МестонахождениеНМАБухгалтерскийУчетСрезПоследних.МОЛ}
	|{УПОРЯДОЧИТЬ ПО
	|	Организация.*,
	|	Подразделение.*,
	|	НематериальныйАктив.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния,
	|	СчетНачисленияАмортизации,
	|	НМАСнятоСУчетаНаНачало,
	|	ДатаПринятияКУчету,
	|	ДатаПоследнегоСостояния,
	|	СпособНачисленияАмортизации,
	|	СрокПолезногоИспользования,
	|	НачислятьАмортизацию}
	|ИТОГИ
	|	МАКСИМУМ(Подразделение),
	|	МАКСИМУМ(НематериальныйАктив),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(СчетУчета),
	|	МАКСИМУМ(ЗначениеТекущегоСостояния),
	|	МАКСИМУМ(СчетНачисленияАмортизации),
	|	МАКСИМУМ(НМАСнятоСУчетаНаНачало),
	|	МАКСИМУМ(ДатаПринятияКУчету),
	|	МАКСИМУМ(ДатаПоследнегоСостояния),
	|	МАКСИМУМ(СпособНачисленияАмортизации),
	|	МАКСИМУМ(СрокПолезногоИспользования),
	|	МАКСИМУМ(НачислятьАмортизацию),
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(ЛиквидационнаяСтоимость),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(СтоимостьОборотДт),
	|	СУММА(СтоимостьОборотКт),
	|	СУММА(АмортизацияОборот),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(ОстаточнаяСтоимость)
	|ПО
	|	Подразделение,
	|	НематериальныйАктив
	|{ИТОГИ ПО
	|	Организация.*,
	|	Подразделение.*,
	|	НематериальныйАктив.*,
	|	МОЛ.*,
	|	СчетУчета,
	|	ЗначениеТекущегоСостояния}";
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить("Подразделение", 		   НСтр("ru='Подразделение';uk='Підрозділ'"));
	СтруктураПредставлениеПолей.Вставить("Организация", 		   НСтр("ru='Организация';uk='Організація'"));
	СтруктураПредставлениеПолей.Вставить("НематериальныйАктив",    НСтр("ru='Нематериальный актив';uk='Нематеріальний актив'"));
	СтруктураПредставлениеПолей.Вставить("МОЛ", 				   НСтр("ru='МОЛ';uk='МВО'"));
	СтруктураПредставлениеПолей.Вставить("НМАСнятоСУчетаНаНачало", НСтр("ru='Снято с учета на начало отчета';uk='Знято з обліку на початок звіту'"));
	
	СтруктураПредставлениеПолей.Вставить("Состояние", НСтр("ru='Состояние';uk='Стан'"));
	
	СтруктураПредставлениеПолей.Вставить("ДатаПринятияКУчету", 		  НСтр("ru='Дата принятия к учету';uk='Дата прийняття до обліку'"));
	СтруктураПредставлениеПолей.Вставить("ДатаПоследнегоСостояния",   НСтр("ru='Дата установки текущего состояния';uk='Дата установки поточного стану'"));
	СтруктураПредставлениеПолей.Вставить("ЗначениеТекущегоСостояния", НСтр("ru='Текущее состояние';uk='Поточний стан'"));
	
	СтруктураПредставлениеПолей.Вставить("СчетУчета", 				  НСтр("ru='Счет учета';uk='Рахунок'"));   
	СтруктураПредставлениеПолей.Вставить("СчетНачисленияАмортизации", НСтр("ru='Счет амортизации';uk='Рахунок амортизації'"));
	
	СтруктураПредставлениеПолей.Вставить("СпособНачисленияАмортизации", 		  НСтр("ru='Способ начисления амортизации';uk='Спосіб нарахування амортизації'"));
	СтруктураПредставлениеПолей.Вставить("СпособыОтраженияРасходовПоАмортизации", НСтр("ru='Отражение расходов';uk='Відображення витрат'"));
	
	СтруктураПредставлениеПолей.Вставить("СрокПолезногоИспользования", 					НСтр("ru='Срок использования';uk='Строк використання'"));
	СтруктураПредставлениеПолей.Вставить("ОбъемПродукцииРаботДляВычисленияАмортизации", НСтр("ru='Объем продукции';uk='Обсяг продукції'"));
	СтруктураПредставлениеПолей.Вставить("НачислятьАмортизацию", 						НСтр("ru='Начислять амортизацию';uk='Нараховувати амортизацію'"));
	
	ПостроительОтчета.Текст = ТекстЗапроса;
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	ПостроительОтчета.ВыбранныеПоля.Очистить();
	ПостроительОтчета.ВыбранныеПоля.Добавить("СпособНачисленияАмортизации");
	ПостроительОтчета.ВыбранныеПоля.Добавить("СрокПолезногоИспользования");
	
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("Подразделение", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("НематериальныйАктив", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("МОЛ", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СчетУчета", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ЗначениеТекущегоСостояния", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СчетНачисленияАмортизации", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("НМАСнятоСУчетаНаНачало", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ДатаПринятияКУчету", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ДатаПоследнегоСостояния", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("ПорядокПогашенияСтоимости", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СпособНачисленияАмортизации", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СпособыОтраженияРасходовПоАмортизации", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("СрокПолезногоИспользования", Новый Структура("НематериальныйАктив"));
	ОбщийОтчет.мСтруктураСвязиПоказателейИИзмерений.Вставить("НачислятьАмортизацию", Новый Структура("НематериальныйАктив"));
	
	УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	
	ОбщийОтчет.ЗаполнитьПоказатели("ПервоначальнаяСтоимость", НСтр("ru='Первоначальная стоимость';uk='Первинна вартість'"), Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("ЛиквидационнаяСтоимость", НСтр("ru='Ликвидационная стоимость';uk='Ліквідаційна вартість'"), Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьНачальныйОстаток", НСтр("ru='Стоимость на начало периода';uk='Вартість на початок періоду'"), Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияНачальныйОстаток", НСтр("ru='Амортизация на начало периода';uk='Амортизація на початок періоду'"), Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОборотДт", НСтр("ru='Увеличение стоимости';uk='Збільшення вартості'"), Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияОборот", НСтр("ru='Амортизация за период';uk='Амортизація за період'"), Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьОборотКт", НСтр("ru='Уменьшение стоимости';uk='Зменшення вартості'"), Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("СтоимостьКонечныйОстаток", НСтр("ru='Стоимость на конец периода';uk='Вартість на кінець періоду'"), Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели("АмортизацияКонечныйОстаток", НСтр("ru='Амортизация на конец периода';uk='Амортизація на кінець періоду'"), Истина, "ЧЦ=15; ЧДЦ=2");
	
	ОбщийОтчет.ЗаполнитьПоказатели("ОстаточнаяСтоимость", НСтр("ru='Остаточная стоимость';uk='Залишкова вартість'"), Истина, "ЧЦ=15; ЧДЦ=2");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("НематериальныйАктив");
	МассивОтбора.Добавить("НМАСнятоСУчетаНаНачало");
	
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры // Настроить()

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет  = ЭтотОбъект;
	
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Добавляет в структуру общие для всех отчетов параметры настройки
//
// Параметры:
//	Нет.
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	СтруктураНастроек.Вставить("НастройкиПостроителя", ОбщийОтчет.ПостроительОтчета.ПолучитьНастройки());
	СтруктураНастроек.Вставить("Показатели", ОбщийОтчет.Показатели.Выгрузить());
	СтруктураНастроек.Вставить("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураНастроек.Вставить("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураНастроек.Вставить("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураНастроек.Вставить("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураНастроек.Вставить("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции // СформироватьСтруктуруДляСохраненияНастроек()()

// Заполняет из структуры настроек общие параметры отчетов
//
// Параметры:
//	Нет.
//
Процедура ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ПоказыватьЗаголовок) Экспорт
	Перем ТабПоказатели;
	
	Если ТипЗнч(ОбщийОтчет.СохраненныеНастройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ОбщийОтчет.ПостроительОтчета.УстановитьНастройки(СтруктураСНастройками.НастройкиПостроителя);
	
	СтруктураСНастройками.Свойство("Показатели", ТабПоказатели);
	Если ТипЗнч(ТабПоказатели) = Тип("ТаблицаЗначений") Тогда
		ОбщийОтчет.Показатели.Загрузить(ТабПоказатели);
	КонецЕсли;
	
	СтруктураСНастройками.Свойство("ВыводитьДополнительныеПоляВОтдельнойКолонке", ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке);
	СтруктураСНастройками.Свойство("ВыводитьИтогиПоВсемУровням", ОбщийОтчет.ВыводитьИтогиПоВсемУровням);
	СтруктураСНастройками.Свойство("ВыводитьПоказателиВСтроку", ОбщийОтчет.ВыводитьПоказателиВСтроку);
	СтруктураСНастройками.Свойство("РаскрашиватьИзмерения", ОбщийОтчет.РаскрашиватьИзмерения);
	СтруктураСНастройками.Свойство("ЗаголовокПомечен", ОбщийОтчет.ПоказыватьЗаголовок);
	
КонецПроцедуры // ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки)()

ОбщийОтчет.ИмяРегистра          = "СтоимостьНМА";
ОбщийОтчет.мНазваниеОтчета      = НСтр("ru='Ведомость по амортизации НМА';uk='Відомість по амортизації НМА'");
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мРежимВводаПериода   = 0;

#КонецЕсли
