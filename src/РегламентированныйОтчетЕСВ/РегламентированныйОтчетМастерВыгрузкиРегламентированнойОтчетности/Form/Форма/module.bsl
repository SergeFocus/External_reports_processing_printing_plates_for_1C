Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	РегламентированнаяОтчетность.ПередОткрытиемОсновнойФормыРегламентиованногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	СтроковоеПредставлениеТипаОбъекта = Строка(ТипЗнч(ЭтотОбъект));
	КлючеваяФразаРУ = "Внешний отчет объект";
	КлючеваяФразаУК = "Зовнішній звіт об`єкт";
	ЭтоВнешняяОбработка =  (Лев(СтроковоеПредставлениеТипаОбъекта, СтрДлина(КлючеваяФразаРУ)) = КлючеваяФразаРУ)
						ИЛИ(Лев(СтроковоеПредставлениеТипаОбъекта, СтрДлина(КлючеваяФразаУК)) = КлючеваяФразаУК);
						
	Если   ЭтоВнешняяОбработка
	     И спПараметры = Неопределено Тогда
		 Отказ = Истина;
		 Возврат;
	КонецЕсли;					
						
	// Вставить содержимое обработчика.
	Если спПараметры = Неопределено Тогда
		Сообщить(НСтр("ru='Данный отчет носит служебный характер и не предназначен для самостоятельного использования!';uk='Даний звіт носить службовий характер і не призначений для самостійного використання!'"));	
		Отказ = истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	НомерСтраницы = 0;
	СменитьПанели();
	
	ВыполнениеШагов = Новый Массив(ЭлементыФормы.ПанельОсновная.Страницы.Количество());
	Для Страница = 0 По ВыполнениеШагов.Количество()-1 Цикл
		ВыполнениеШагов[Страница] = Ложь;
	КонецЦикла;
	
	//список  параметров находится в структуре спПараметры
	//реквизите обработки
	стрКоманда 	= спПараметры.Команда;
	Если стрКоманда = "ЭкспортXML" Тогда
		ФорматОтчета = "XML";
    ИначеЕсли стрКоманда = "ЭкспортАРМЗС" Тогда 
	    ФорматОтчета = "АРМЗС" ;
	Иначе 
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Команда (%1) не подерживается обработкой !';uk='Команда (%1) не підтримується обробкою !'"), стрКоманда));
		Возврат;
	КонецЕсли;
	
	// Заполним реквизиты формы по умолчанию данными из выгрузки
	Если стрКоманда = "ЭкспортXML" Тогда
		спПараметры.ДанныеОтчета.Свойство("ПолеТабличногоДокументаСлужебныеДанные",СлужебнаяСтруктура);
		C_DOC_TYPE = ПолучитьИзСтруктуры("C_DOC_TYPE",СлужебнаяСтруктура);
		C_DOC_CNT  = ПолучитьИзСтруктуры("C_DOC_CNT",СлужебнаяСтруктура);
		Если НЕ ЗначениеЗаполнено(C_DOC_CNT)  Тогда
			C_DOC_CNT = 1;
		КонецЕсли;
		D_FILL = ПолучитьИзСтруктуры("D_FILL",СлужебнаяСтруктура);
		Если НЕ ЗначениеЗаполнено(D_FILL) Тогда
			D_FILL = ТекущаяДата()
		КонецЕсли;
	КонецЕсли;
	
	//Восстановим значение Каталога для выгрузки РегОтчетов
	КаталогДанных = ВосстановитьЗначение("КаталогДанных");
	
	Если тбСхемы.Колонки.Найти("ФайлВыгрузки") = Неопределено Тогда
		тбСхемы.Колонки.Добавить("ФайлВыгрузки");
		тбСхемы.Колонки.Добавить("Статус");
	Иначе
		тбСхемы.Колонки.Удалить("ФайлВыгрузки");
		тбСхемы.Колонки.Добавить("ФайлВыгрузки");
		тбСхемы.Колонки.Удалить("Статус");
		тбСхемы.Колонки.Добавить("Статус");
	КонецЕсли;
		
	Если тбСхемы.Колонки.Найти("Декларация") = Неопределено Тогда
		тбСхемы.Колонки.Добавить("Декларация");
		тбСхемы.Колонки.Добавить("Приложение");
	Иначе
		тбСхемы.Колонки.Удалить("Декларация");
		тбСхемы.Колонки.Добавить("Декларация");
		тбСхемы.Колонки.Удалить("Приложение");
		тбСхемы.Колонки.Добавить("Приложение");
	КонецЕсли;
	
	Если тбСхемы.Колонки.Найти("ФВыгрузка") = Неопределено Тогда
		тбСхемы.Колонки.Добавить("фВыгрузка", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	ПометкаОбОсновнойДекларации = тбСхемы.Найти(Истина, "Декларация"); 
	Если ПометкаОбОсновнойДекларации = Неопределено Тогда
		ИндексСтрокиДекларации = 0;
	Иначе
		ИндексСтрокиДекларации = тбСхемы.Индекс(ПометкаОбОсновнойДекларации);	
	КонецЕсли;
	Для Сч = 0 По тбСхемы.Количество()-1 Цикл
		тбСхемы[Сч].Декларация =    (Сч = ИндексСтрокиДекларации);
		тбСхемы[Сч].Приложение = НЕ (Сч = ИндексСтрокиДекларации) И (ТбСхемы[Сч].фВыгрузка = Истина ИЛИ ТбСхемы[Сч].фВыгрузка = 1);
	КонецЦикла;
	ВыгружатьПакетом = ТбСхемы.Количество() > 1;
	ВыгружатьПакетомПриИзменении(Неопределено);
	
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы.Начало;
	ЭлементыФормы.Панель2.ТекущаяСтраница = ЭлементыФормы.Панель2.Страницы.Страница1;
	ЗаполнитьДеревоШагов();
	
	ЭлементыФормы.НадписьНазад.Доступность = Ложь;
	
	ИнициализацияГлобСтруктФайловВыгрузки();
	
КонецПроцедуры

Процедура КаталогДанныхНачалоВыбора(Элемент, СтандартнаяОбработка)

 	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru='Выберите каталог сохранения xml файлов';uk='Виберіть каталог збереження xml файлів'");
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);

//	Диалог.Каталог = ПолучитьЗначениеПоУмолчанию(ТекущийПользователь,"ОсновнойКаталогФайлов");
	Диалог.Заголовок = НСтр("ru='Выберите каталог сохранения xml файлов';uk='Виберіть каталог збереження xml файлів'");

	Если Диалог.Выбрать() Тогда
		КаталогДанных = Диалог.Каталог;
		КаталогДанныхЭкспорта = Диалог.Каталог;
	
	КонецЕсли;
 КонецПроцедуры

Процедура ПриЗакрытии()
	//Сохраним значение Каталога для выгрузки РегОтчетов
	СохранитьЗначение("КаталогДанных",КаталогДанных); 
КонецПроцедуры

Процедура ВыгрузитьНажатие(Элемент)
	Перем ТаблицаОшибок, ТекстВыгрузки;
	
	Если НЕ ПроверитьСеществованиеКаталога(КаталогДанных) Тогда
		Вопрос(НСтр("ru='Необходимо указать каталог сохранения файлов экспорта!'; uk='Необхідно вказати каталог збереження файлів експорту!'"), РежимДиалогаВопрос.ОК,,, НСтр("ru='Ошибка'; uk='Помилка'"));
		Возврат;
	КонецЕсли;
	
	КаталогДанныхЭкспорта = КаталогДанных;
	мC_DOC_TYPE = C_DOC_TYPE;
	мC_DOC_CNT  = C_DOC_CNT;
	мD_FILL     = D_FILL;
    мтбСхемы    = тбСхемы; 
	мВыгружатьПакетом = ВыгружатьПакетом;
	ТекстВыгрузки = "";
	Если ФорматОтчета="XML" Тогда
		
		ВыгрузитьXML(ТаблицаОшибок);
		
		ФормаОшибок = ПолучитьФорму("ФормаОтображенияНекорректныхПоказателей", ВладелецФормы);
		
		Если ТаблицаОшибок.Количество() > 0 Тогда
			
			Предупреждение(НСтр("ru = 'Обнаружены неправильно заполненные показатели!
                     |Проверьте заполнение отчета!'; uk = 'Знайдені невірно заповнені показники!
                     |Перевірте заповнення звіту!'"),,НСтр("ru = 'Ошибка!'; uk = 'Помилка!'"));
					 
			ФормаОшибок.ТаблицаСтрок = ТаблицаОшибок;
			ФормаОшибок.Открыть();
			
		Иначе
			
			Если ФормаОшибок.Открыта() Тогда
			
				ФормаОшибок.Закрыть();	
			
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ФорматОтчета="АРМЗС" Тогда
		ВыгрузитьАРМЗС();
	КонецЕсли;
	
КонецПроцедуры

Процедура КнопкаНазадНажатие(Элемент)
	Если НомерСтраницы > 0 Тогда
		НомерСтраницы = НомерСтраницы - 1;
		СменитьПанели();
		
		Если НомерСтраницы = 2 Тогда
			КнопкаНазадНажатие(Элемент);	
		КонецЕсли;
		
		ЭлементыФормы.НадписьВперед.Заголовок = НСтр("ru='Далее';uk='Далі'");
		ЭлементыФормы.НадписьНазад.Заголовок = НСтр("ru='Назад';uk='Назад'");
		Если НомерСтраницы = 0 Тогда
			ЭлементыФормы.НадписьНазад.Доступность = Ложь;
			ЭлементыФормы.НадписьВперед.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаВпередНажатие(Элемент)
	Если НомерСтраницы < ЭлементыФормы.ПанельОсновная.Страницы.Количество() -1 Тогда
		
		Если НомерСтраницы = 0 Тогда
			ЭлементыФормы.НадписьНазад.Доступность = Истина;	
		КонецЕсли;
		
		Если ФорматОтчета="АРМЗС" И НомерСтраницы = 1 Тогда
			ЭтаФорма.Закрыть();	
		КонецЕсли; 
	 
		Если (НомерСтраницы = 1)И ФорматОтчета = "XML" И (ВыполнениеШагов[НомерСтраницы] = Ложь) Тогда
			Вопрос(НСтр("ru='Вначале необходимо выгрузить отчет ';uk='Спочатку потрібно вивантажити звіт '"), РежимДиалогаВопрос.ОК,,,НСтр("ru='Предупреждение';uk='Попередження'"));
			Возврат;
		КонецЕсли;
		
				
		НомерСтраницы = НомерСтраницы + 1;
		ЭлементыФормы.НадписьВперед.Заголовок = НСтр("ru='Далее';uk='Далі'");
		ЭлементыФормы.НадписьНазад.Заголовок = НСтр("ru='Назад';uk='Назад'");
		Если ФорматОтчета="АРМЗС" и НомерСтраницы = 1  Тогда 
			
			ЭлементыФормы.НадписьНазад.Доступность = Истина;
			ЭлементыФормы.НадписьВперед.Доступность = Истина;
			ЭлементыФормы.НадписьВперед.Заголовок = НСтр("ru='Готово';uk='Готово'");
			
		КонецЕсли; 
		
		Если НомерСтраницы = 2 и ЭтаФорма.Открыта() Тогда
			ФормаПредупреждения = Отчеты.РегламентированныйОтчетМастерВыгрузкиРегламентированнойОтчетности.ПолучитьФорму("ФормаПредупреждения");
			ФормаПредупреждения.ФорматОтчета = ФорматОтчета; 
			ФормаПредупреждения.ОткрытьМодально();
			КнопкаВпередНажатие(Элемент);
			ВыполнениеШагов[НомерСтраницы] = Истина;
		КонецЕсли;
		
		Если НомерСтраницы = 3 Тогда
			ЭлементыФормы.Панель4.ТекущаяСтраница = ЭлементыФормы.Панель4.Страницы.Страница2;
			ЭлементыФормы.НадписьВперед.Заголовок = "Готово";
			Если ФорматОтчета = "XML" Тогда 
				ЭлементыФормы.Надпись7.Заголовок = НСтр("ru='Подготовленный отчет будет отправлен в Налоговую Инспекцию.';
				| uk='Підготовлений звіт буде відправлено до Налогової Інспекції.'");
				ЭлементыФормы.Отправить.Заголовок = НСтр("ru='Отправить подготовленный отчет в Налоговую Инспекцию.';
				| uk='Відправити підготовлений звіт Налогової Інспекції.'");										
			ИначеЕсли ФорматОтчета ="АРМЗС" Тогда                                                         
				ЭлементыФормы.Надпись7.Заголовок = НСтр("ru='Подготовленный отчет будет отправлен в Пенсионный фонд.'; 
				|uk='Підготовлений звіт буде відправлено до Пенсійного фонду.'");
				ЭлементыФормы.Отправить.Заголовок = НСтр("ru='Отправить подготовленный отчет в Пенсионный фонд.';
				| uk='Відправити підготовлений звіт до пенсійного фонду.'");						
			КонецЕсли;
		КонецЕсли;
		СменитьПанели();
	ИначеЕсли НомерСтраницы = ЭлементыФормы.ПанельОсновная.Страницы.Количество() - 1 Тогда 
		ФормаПредупрежденияПослеОтправки = Отчеты.РегламентированныйОтчетМастерВыгрузкиРегламентированнойОтчетности.ПолучитьФорму("ФормаПредупрежденияПослеОтправки");
		ФормаПредупрежденияПослеОтправки.ОткрытьМодально();
		Закрыть();		
	КонецЕсли;

КонецПроцедуры

Процедура тбСхемыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка = ЭлементыФормы.тбСхемы.Колонки.ФайлВыгрузки Тогда
		
		Если  НЕ ВыбраннаяСтрока.Статус = 0 
			И НЕ ВыбраннаяСтрока.Статус = 1 Тогда
			
			Предупреждение(НСтр("ru = 'Файл не был сформирован! Установить флажок выгрузи и повторите выгрузку.'; uk = 'Файл не було сформовано! Встановіть позначку вивантаження та повторіть вивантаження.'"));
			Возврат;
		
		КонецЕсли;
		
		ЗапуститьПриложение(КаталогДанных + "\" + ВыбраннаяСтрока.ФайлВыгрузки);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьДеревоШагов()
	
	НомерСтроки = 2;
	Отступ = "	";
	
	НомерЭтапа = 1;
	Для Каждого СтраницаЭтапа из СписокЭтапов Цикл
		
		Область = ЭлементыФормы.ПолеТабличногоДокумента1.Область(НомерСтроки,2,НомерСтроки,4);
		Область.Шрифт = Новый Шрифт(, 8, Ложь, Ложь, Ложь, Ложь);
		Область.Объединить();
		Область.Имя = Строка(НомерЭтапа) + "_";
		Область.Текст = СтраницаЭтапа;
		НомерСтроки = НомерСтроки + 1;
		
		РазвернутыйСписокШагов = СписокШагов[НомерЭтапа-1];
		НомерШага = 1;
		Для Каждого Страница ИЗ РазвернутыйСписокШагов Цикл
			
			Если НомерШага > 1 Тогда
				Область = ЭлементыФормы.ПолеТабличногоДокумента1.Область(НомерСтроки,3,НомерСтроки,4);
				Область.Объединить();
				Область.Имя = Строка(НомерЭтапа) + "_" + Строка(НомерШага);
				Область.Шрифт = Новый Шрифт(, 8, Ложь, Ложь, Ложь, Ложь);
				Область.Текст = Страница;
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;
			НомерШага = НомерШага + 1;
		КонецЦикла;
		
		НомерЭтапа = НомерЭтапа + 1;
	КонецЦикла;
		
КонецПроцедуры     

Процедура СменитьПанели()
	ЭлементыФормы.Панель2.ТекущаяСтраница = ЭлементыФормы.Панель2.Страницы[НомерСтраницы];
	ЭлементыФормы.ПанельОсновная.ТекущаяСтраница = ЭлементыФормы.ПанельОсновная.Страницы[НомерСтраницы];
КонецПроцедуры

Процедура ЭЦПНажатие(Элемент)
	Перем ОшибкиПодготовки;
	ГлобОшибкаЭЦП = Истина;
	
	ЦветКрасный = Новый Цвет(255,0,0);
	ЦветСиний   = Новый Цвет(0,0,255);
	
	Надписи = Новый Массив(6);
	
	Надписи[0] = НСтр("ru='- не подписан бухгалтером';	uk='- не підписаний бухгалтером'");
	Надписи[1] = НСтр("ru='- подписан бухгалтером';		uk='- підписаний бухгалтером'");
	Надписи[2] = НСтр("ru='- не подписан руководителем';uk='- не підписаний керівником'");
	Надписи[3] = НСтр("ru='- подписан руководителем';	uk='- підписаний керівником'");
	Надписи[4] = НСтр("ru='- не зашифрован';			uk='- не зашифрований'");
	Надписи[5] = НСтр("ru='- зашифрован';				uk='- зашифрований'");

	
	Если (ВыполнениеШагов[НомерСтраницы - 1] = Ложь) И (ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница1) Тогда
		ТекстВопроса = НСтр("ru='На предыдущем шаге отчет не выгружен в формат xml." + Символы.ПС + "Желаете выбрать файл самостоятельно';	uk='На попередньому етапі звіт не був вивантажений в формат xml." + Символы.ПС + "Бажаєте вибрати файл самостійно?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница2;
			Возврат;
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;	
		КонецЕсли;
	ИначеЕсли (ВыполнениеШагов[НомерСтраницы - 1] = Истина) Тогда 
		ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница1;	
	КонецЕсли;
	
	//Если файл сформирован программой
	Если ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Страница1 Тогда 
	
		ОшибкиПодготовки = Новый Массив(3);
		ГлобОшибкаЭЦП = ПодготовитьДанныеДляОтправки(ОшибкиПодготовки);
		
		СохранитьФайлыВИБ(ГлобСтруктФайловВыгрузки);
		
		Для Номер=0 По ОшибкиПодготовки.Количество()-1 Цикл
			ЭлементУправления1 = "ПолеКартинки" + Строка(1 + Номер + (1*Номер));	
			ЭлементУправления2 = "ПолеКартинки" + Строка(2 + Номер + (1*Номер));
			ЭлементУправления3 = "НадписьПодписан" + Строка(Номер + 1);
			Если ОшибкиПодготовки[Номер] = Ложь Тогда
				ЭлементыФормы[ЭлементУправления1].Видимость = Ложь;
				ЭлементыФормы[ЭлементУправления2].Видимость = Истина;
				ЭлементыФормы[ЭлементУправления3].ЦветТекста = ЦветСиний;
				ЭлементыФормы[ЭлементУправления3].Заголовок = Надписи[1 + Номер + (1*Номер)];
				
				//Ставим соответствующие пометки в документе ВыгрузкаРегламентированныхОтчетов
				Если Номер = 0 Тогда
					НовыйДок.ПодписанБухгалтером = Истина;	
				ИначеЕсли Номер = 1 Тогда
					НовыйДок.ПодписанРуководителем = Истина;
				ИначеЕсли Номер = 2 Тогда
					НовыйДок.Зашифрован = Истина;
				КонецЕсли;                                                   
				
			Иначе	
				ЭлементыФормы[ЭлементУправления1].Видимость = Истина;
				ЭлементыФормы[ЭлементУправления2].Видимость = Ложь;
				ЭлементыФормы[ЭлементУправления3].ЦветТекста = ЦветКрасный;
				ЭлементыФормы[ЭлементУправления3].Заголовок = Надписи[Номер + (1*Номер)];
				
				
				//Ставим соответствующие пометки в документе ВыгрузкаРегламентированныхОтчетов
				Если Номер = 0 Тогда
					НовыйДок.ПодписанБухгалтером = Истина;	
				ИначеЕсли Номер = 1 Тогда
					НовыйДок.ПодписанРуководителем = Истина;
				ИначеЕсли Номер = 2 Тогда
					НовыйДок.Зашифрован = Истина;
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;
		
	//Если файлы сформированы внешним приложением
	Иначе
		ОшибкиПодготовки = Новый Массив(3);
		ГлобОшибкаЭЦП = ПодготовитьДанныеДляОтправки(ОшибкиПодготовки);
		
		ГлобСтруктФайловВыгрузки.Очистить();
		Для Каждого Строка Из Файлы Цикл
			ВыбФайл = Новый Файл(Строка.Файл);
			ИмяФайла = Строка.Файл;
			Пока Найти(ИмяФайла, "\") <> 0 Цикл
				ДлинаСтроки = СтрДлина(ИмяФайла);
				ИмяФайла = Сред(ИмяФайла, Найти(ИмяФайла, "\")+1, ДлинаСтроки); 	
			КонецЦикла;
			ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), ВыбФайл);
		КонецЦикла;
		
		СохранитьФайлыВИБ(ГлобСтруктФайловВыгрузки);	
	КонецЕсли;
	
	ВыполнениеШагов[НомерСтраницы] = НЕ (ГлобОшибкаЭЦП);
КонецПроцедуры

Процедура ОтправитьНажатие(Элемент)
	ГлобОшибкаОтправки = Истина;
	
	//Если (ВыполнениеШагов[НомерСтраницы - 1] = Ложь) И (ЭлементыФормы.Панель4.ТекущаяСтраница = ЭлементыФормы.Панель4.Страницы.Страница1) Тогда
	//	ТекстВопроса = НСтр("ru='На предыдущем шаге отчет не подготовлен к отправке!" + Символы.ПС + "Желаете выбрать файл самостоятельно';	uk='На попередньому етапі звіт не був підготовлений до відправлення!" + Символы.ПС + "Бажаєте вибрати файл самостійно?'");
	//	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	//	
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		
			ЭлементыФормы.Панель4.ТекущаяСтраница = ЭлементыФормы.Панель4.Страницы.Страница2;
	//		Возврат;
	//	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
	//		Возврат;	
	//	КонецЕсли;
	//ИначеЕсли (ВыполнениеШагов[НомерСтраницы - 1] = Истина) Тогда 
	//	ЭлементыФормы.Панель4.ТекущаяСтраница = ЭлементыФормы.Панель4.Страницы.Страница1;	
	//	
	//КонецЕсли;
	
	Если ФайлыДляОтправки.Количество()=0 Тогда
		Сообщить(НСтр("ru='Не выбрано ни одного файла для отправки!'; uk='Не обрано жодного файлу для відправлення!'"));
		Возврат;
	КонецЕсли;
	
	ГлобОшибкаОтправки = ВыполнитьОтправкуКомплекта(ФайлыДляОтправки);
	
	// сохраняем отправленные файлы в ИБ
	
	//Если файл сформирован программой
	Если ЭлементыФормы.Панель4.ТекущаяСтраница = ЭлементыФормы.Панель4.Страницы.Страница1 Тогда 
		
	Иначе		
		ГлобСтруктФайловВыгрузки.Очистить();
		Для Каждого Строка Из ФайлыДляОтправки Цикл
			ВыбФайл = Новый Файл(Строка.Файл);
			ИмяФайла = Строка.Файл;
			Пока Найти(ИмяФайла, "\") <> 0 Цикл
				ДлинаСтроки = СтрДлина(ИмяФайла);
				ИмяФайла = Сред(ИмяФайла, Найти(ИмяФайла, "\")+1, ДлинаСтроки); 	
			КонецЦикла;
			ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), ВыбФайл);
		КонецЦикла;
		
		НовыйДок.ОтправленныйФайл = ГлобСтруктФайловВыгрузки;
		
		//нужно поставить признаки того, что файлы подписаны зашифрованы и отправлены
		НовыйДок.ПодписанБухгалтером 	= Истина;	
		НовыйДок.ПодписанРуководителем 	= Истина;
		НовыйДок.Зашифрован 			= Истина;
		НовыйДок.Записать();
	КонецЕсли;
	
	Если НЕ(ГлобОшибкаОтправки) Тогда
		ЭлементыФормы.ПолеКартинки12.Видимость = Ложь;
		ЭлементыФормы.ПолеКартинки13.Видимость = Истина;
	Иначе	
		ЭлементыФормы.ПолеКартинки12.Видимость = Истина;
		ЭлементыФормы.ПолеКартинки13.Видимость = Ложь;
	КонецЕсли;
	
	ВыполнениеШагов[НомерСтраницы] = НЕ (ГлобОшибкаОтправки);
КонецПроцедуры

Функция ПодготовитьДанныеДляОтправки(ОшибкиПодготовки)
	ОшибкиПодготовки[0] = Ложь;
	ОшибкиПодготовки[1] = Ложь;
	ОшибкиПодготовки[2] = Ложь;
	
	ВремГлобСтруктФайловВыгрузки = ГлобСтруктФайловВыгрузки;
	
	Для Каждого Файл Из ВремГлобСтруктФайловВыгрузки Цикл
		//НаложитьЭЦПБухгалтера(Файл);
		ГлобСтруктФайловВыгрузки.Вставить(Файл.Ключ, Файл.Значение);
	КонецЦикла;
	
	Для Каждого Файл Из ВремГлобСтруктФайловВыгрузки Цикл
		//НаложитьЭЦПДиректора(Файл);
		ГлобСтруктФайловВыгрузки.Вставить(Файл.Ключ, Файл.Значение);
	КонецЦикла;
	
	Для Каждого Файл Из ВремГлобСтруктФайловВыгрузки Цикл
		//Зашифровать(Файл);
		ГлобСтруктФайловВыгрузки.Вставить(Файл.Ключ, Файл.Значение);
	КонецЦикла;
	
	
	//Возвращаем признак присутствия ощибки!
	Возврат Ложь;
КонецФункции

Процедура ВыбратьФайлыНажатие(Элемент)
	СписокФайлов = Новый ТаблицаЗначений;
	РежимДиалога = РежимДиалогаВыбораФайла.Открытие; 
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалога);
	
	СписокФайлов.Колонки.Добавить("Файл");
	
	ДиалогВыбора.ПолноеИмяФайла = "";
	Если ФорматОтчета = "XML" Тогда
	Фильтр = НСтр("ru='Отчеты в формате xml(*.xml)|*.xml'; uk='Звіти у форматі xml(*.xml)|*.xml'");
	ИначеЕсли ФорматОтчета="АРМЗС" Тогда
    Фильтр = НСтр("ru='Отчеты в формате zpi(*.zpi)|*.zpi'; uk='Звіти у форматі zpi(*.zpi)|*.zpi'");
	КонецЕсли ;
	ДиалогВыбора.Фильтр = Фильтр;
	ДиалогВыбора.МножественныйВыбор = Истина;
	ДиалогВыбора.Заголовок = НСтр("ru='Выберите файлы'; uk='Оберіть файли'");
	
	Если ДиалогВыбора.Выбрать() Тогда
    	МассивФайлов = ДиалогВыбора.ВыбранныеФайлы;
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			//проверим, есть ли такой файл уже в таблице
			Если ФайлыДляОтправки.Найти(ИмяФайла) <> Неопределено Тогда
				Продолжить;	
			КонецЕсли;
			
        	ВыбФайл = Новый Файл(ИмяФайла);
			НовыйФайл = СписокФайлов.Добавить();
			НовыйФайл.Файл = ВыбФайл;
			
			Если Элемент.Имя = "ВыбратьФайлыДляПодписи" Тогда
				НоваяСтрока = Файлы.Добавить();
			ИначеЕсли Элемент.Имя = "ВыбратьФайлыДляОтправки" Тогда
				НоваяСтрока = ФайлыДляОтправки.Добавить();
			КонецЕсли;
			НоваяСтрока.Файл = ВыбФайл.ПолноеИмя;
		КонецЦикла;
	Иначе
    	Предупреждение(НСтр("ru='Файл(ы) не выбран!'; uk='Файл(и) не обран!'"));
	КонецЕсли;
КонецПроцедуры

Процедура тбСхемыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Статус.ОтображатьТекст = Ложь;
	Если ОформлениеСтроки.Ячейки.Статус.Значение = 0 Тогда 
		ОформлениеСтроки.Ячейки.Статус.УстановитьКартинку(БиблиотекаКартинок.ЗначокОтчетПринят);
	ИначеЕсли ОформлениеСтроки.Ячейки.Статус.Значение = 1 Тогда 
		ОформлениеСтроки.Ячейки.Статус.УстановитьКартинку(БиблиотекаКартинок.ЗначокОтчетНеПринят);
	КонецЕсли
КонецПроцедуры

Функция ПроверитьСеществованиеКаталога(КаталогДанных)
	Результат = Ложь;
	КаталогНаДиске = Новый Файл(КаталогДанных);
	Если (КаталогДанных <> Неопределено) И (КаталогДанных <> "") И (КаталогНаДиске.Существует()) Тогда
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Процедура ПодробнееНажатие(Элемент)
 ФормаОбработкиПодробнее = ЭтотОбъект.ПолучитьФорму("ФормаФайловВыгрузки");
 ФормаОбработкиПодробнее.ТаблицаФайловВыгрузки = ТаблицаФайловВыгрузки;
 ФормаОбработкиПодробнее.КаталогДанных = КаталогДанных;
 ФормаОбработкиПодробнее.Открыть();
	
КонецПроцедуры

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	ПриОткрытии();
	
КонецПроцедуры

Процедура тбСхемыПриИзмененииФлажка(Элемент, Колонка)
	
	Если Колонка.Имя = "Декларация" Тогда
		
		// декларация может быть только одна. Куда щелкунули - та и декларация
		СтрокаДекларации = ЭлементыФормы.тбСхемы.ТекущиеДанные;
		Если СтрокаДекларации = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Для каждого ТекСтрока Из тбСхемы Цикл
			Если ТекСтрока = СтрокаДекларации Тогда
				ТекСтрока.Декларация = Истина;
				ТекСтрока.Приложение = Ложь;
			Иначе
				ТекСтрока.Декларация = Ложь;
			КонецЕсли;	
		КонецЦикла;
		
	ИначеЕсли Колонка.Имя = "Приложение" Тогда

		ТекСтрока = ЭлементыФормы.тбСхемы.ТекущиеДанные;		
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ТекСтрока.Приложение = ?(ТекСтрока.Декларация, Ложь, ТекСтрока.Приложение);
		
	ИначеЕсли Колонка.Имя = "фВыгрузка" Тогда
		
		ТекСтрока = ЭлементыФормы.тбСхемы.ТекущиеДанные;		
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ТекСтрока.Декларация = Истина Тогда
			ТекСтрока.Приложение = (ТекСтрока.фВыгрузка = 1 ИЛИ ТекСтрока.фВыгрузка = Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгружатьПакетомПриИзменении(Элемент)
	
	ЭлементыФормы.тбСхемы.Колонки.Декларация.Видимость = ВыгружатьПакетом;
	ЭлементыФормы.тбСхемы.Колонки.Приложение.Видимость = ВыгружатьПакетом;
	
	ЭлементыФормы.ВыгружатьПакетом.Доступность = (тбСхемы.Количество() > 1)
	
КонецПроцедуры

СписокШагов = Новый Массив;
СписокЭтапов = Новый Массив;

СписокЭтапов.Добавить(НСтр("ru='Выгрузка';	uk='Вивантаження'"));
ВременныйМассив = Новый Массив;
ВременныйМассив.Добавить("");
СписокШагов.Добавить(ВременныйМассив);

СписокЭтапов.Добавить(НСтр("ru='Подготовка к отправке';	uk='Підготовка до відправлення'"));
ВременныйМассив = Новый Массив;
ВременныйМассив.Добавить("");
ВременныйМассив.Добавить(НСтр("ru='Подписать бухгалтером';	uk='Підписати бухгалтером'"));
ВременныйМассив.Добавить(НСтр("ru='Подписать руководителем';	uk='Підписати керівником'"));
ВременныйМассив.Добавить(НСтр("ru='Зашифровать';	uk='Зашифрувати'"));
СписокШагов.Добавить(ВременныйМассив);
СписокЭтапов.Добавить(НСтр("ru='Отправить отчет в соответсвующий орган';	uk='Відправлення звіту до '"));
ВременныйМассив = Новый Массив;
ВременныйМассив.Добавить("");
СписокШагов.Добавить(ВременныйМассив);